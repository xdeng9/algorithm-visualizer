{"version":3,"sources":["header/Header.js","grid/grid.js","graph/util.js","graph/Dijkstra.js","graph/aStar_util.js","graph/AStar.js","home/Home.js","App.js","index.js"],"names":["Header","className","to","id","Grid","props","rows","cols","startSelected","endSelected","lastPos","state","grid","start","end","isMousePressed","handleMouseDown","bind","handleMouseUp","handleReset","handleOutbounds","handleTips","this","setState","createGrid","style","i","push","j","key","onMouseDown","onMouseUp","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","e","preventDefault","pos","currentTarget","split","parseInt","parseIdToPos","cell","document","getElementById","isStartOrEnd","classList","add","remove","getStartElement","getEndElement","contains","parsePosToId","map","el","clearGraph","algoType","res","dijkstraSearch","length","alert","time","shortestPath","setTimeout","path","aStarSearch","pop","tipsModal","querySelector","closeBtn","display","onclick","onClick","animate","React","Component","PriorityQueue","items","size","Node","k","d","prototype","getLeftChildIndex","parentIndex","getRightChildIndex","getParentIndex","childIndex","hasLeftChild","index","hasRightChild","hasParent","leftChild","rightChild","parent","swap","idx1","idx2","node","heapifyDown","heapifyUp","smallerChildIndex","getAdjNodes","H","W","x","y","nodes","dir","newX","newY","addToGraph","neighbors","neighbor","Dijkstra","graph","cellId","buildAdjList","visited","Set","src","tar","distance","pq","offset","Infinity","curNode","has","newDistance","prev","unshift","getSP","g","h","calcGCost","startPos","curPos","Math","abs","calcHCost","endPos","setParent","parentNode","UpdateGCost","cost","getGCost","getHCost","getFCost","getPos","AStar","row","col","open","close","startNode","startKey","found","undefined","Home","menuList","querySelectorAll","App","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.444b0e53.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n      <div className=\"header-container\">\n        <div className=\"title\">\n          <Link to='/' className=\"link hover\">\n            Algorithm Visualizer\n          </Link>\n        </div>\n        <ul className=\"menu-list\">\n          <li>\n            <Link to=\"/dijkstra\" className=\"hover\" id=\"dijkstra\">\n              Dijkstra's Algorithm\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/astar\" className=\"hover\" id=\"astar\">\n              A* Search\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport './grid.css';\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rows = 25;\n    this.cols = 50;\n    this.startSelected = false;\n    this.endSelected = false;\n    this.lastPos = [0, 0];\n    this.state = {\n      grid: [],\n      start: [10, 8],\n      end: [10, 42],\n      isMousePressed: false,\n    };\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleOutbounds = this.handleOutbounds.bind(this);\n    this.handleTips = this.handleTips.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.setState({ grid: this.createGrid() });\n  }\n\n  createGrid() {\n    let grid = [];\n    let style = \"cell\";\n    let { start, end } = this.state;\n    for (let i = 0; i < this.rows; i++) {\n      grid.push([]);\n      for (let j = 0; j < this.cols; j++) {\n        if (i === start[0] && j === start[1]) style = \"cell start\";\n        else if (i === end[0] && j === end[1]) style = \"cell finish\";\n        else style = \"cell\";\n        grid[i][j] = (\n          <div\n            id={`${i}-${j}`}\n            key={`${i}-${j}`}\n            className={style}\n            onMouseDown={this.handleMouseDown}\n            onMouseUp={this.handleMouseUp}\n            onMouseEnter={this.handleMouseEnter.bind(this, i, j)}\n            onMouseLeave={this.handleMouseLeave.bind(this, i, j)}\n          ></div>\n        );\n      }\n    }\n    return grid;\n  }\n\n  handleMouseDown(e) {\n    e.preventDefault();\n\n    let pos = e.currentTarget.id.split(\"-\");\n    if (\n      parseInt(pos[0]) === this.state.start[0] &&\n      parseInt(pos[1]) === this.state.start[1]\n    ) {\n      this.lastPos = this.parseIdToPos(e.currentTarget.id);\n      this.startSelected = true;\n    } else {\n      this.startSelected = false;\n    }\n\n    if (\n      parseInt(pos[0]) === this.state.end[0] &&\n      parseInt(pos[1]) === this.state.end[1]\n    ) {\n      this.lastPos = this.parseIdToPos(e.currentTarget.id);\n      this.endSelected = true;\n    } else {\n      this.endSelected = false;\n    }\n\n    this.setState({ isMousePressed: true });\n  }\n\n  handleMouseEnter(i, j) {\n    if (!this.state.isMousePressed) return;\n    let cell = document.getElementById(`${i}-${j}`);\n    if (!this.startSelected && !this.endSelected) {\n        \n    } else {\n      if (!this.isStartOrEnd([i, j])) {\n        this.lastPos = [i, j];\n        if (this.startSelected)\n          cell.classList.add('start');\n        else cell.classList.add(\"finish\");\n      }\n    }\n  }\n\n  handleMouseLeave(i, j) {\n    if (!this.state.isMousePressed) return;\n\n    let cell = document.getElementById(`${i}-${j}`);\n    if (!this.startSelected && !this.endSelected) {\n        if (cell.id !== this.getStartElement().id && cell.id !== this.getEndElement().id) {\n            if (cell.classList.contains(\"wall\")) cell.classList.remove(\"wall\");\n            else cell.classList.add(\"wall\");\n        }\n    } else {\n      if (this.startSelected) {\n        document.getElementById(`${i}-${j}`).classList.remove(\"start\");\n      }\n      else {\n        document.getElementById(`${i}-${j}`).classList.remove(\"finish\");\n      } \n      this.lastPos = [i, j];\n    }\n  }\n\n  handleMouseUp(e) {\n    e.preventDefault();\n    let pos = this.parseIdToPos(e.currentTarget.id);\n\n    if (!this.isStartOrEnd(pos)) {\n      if (this.startSelected) {\n        document.getElementById(e.currentTarget.id).classList.add(\"start\");\n        this.setState({\n          isMousePressed: false,\n          start: this.parseIdToPos(e.currentTarget.id),\n        });\n      } else if (this.endSelected) {\n        document.getElementById(e.currentTarget.id).classList.add(\"finish\");\n        this.setState({\n          isMousePressed: false,\n          end: this.parseIdToPos(e.currentTarget.id),\n        });\n      } else {\n        let cell = document.getElementById(e.currentTarget.id);\n        if (cell.classList.contains(\"wall\")) cell.classList.remove(\"wall\");\n        else if (!this.isStartOrEnd(pos)) {\n          cell.classList.add(\"wall\");\n        }\n        this.setState({ isMousePressed: false });\n      }\n    } else {\n      if (this.startSelected) {\n        document.getElementById(this.parsePosToId(this.lastPos)).classList.add('start');\n        this.setState({\n          isMousePressed: false,\n          start: this.lastPos\n        });\n      } else if (this.endSelected) {\n        document.getElementById(this.parsePosToId(this.lastPos)).classList.add('finish');\n        this.setState({\n          isMousePressed: false,\n          end: this.lastPos\n        });\n      }\n    }\n  }\n\n  isStartOrEnd(pos) {\n    if (pos[0] === this.state.start[0] && pos[1] === this.state.start[1]) return true;\n    if (pos[0] === this.state.end[0] && pos[1] === this.state.end[1]) return true;\n    return false;\n  }\n\n  parseIdToPos(id) {\n    let pos = id.split(\"-\");\n    return pos.map((el) => parseInt(el));\n  }\n\n  parsePosToId(pos) {\n    return `${pos[0]}-${pos[1]}`;\n  }\n\n  getStartElement() {\n    return document.getElementById(\n      `${this.state.start[0]}-${this.state.start[1]}`\n    );\n  }\n\n  getEndElement() {\n    return document.getElementById(\n      `${this.state.end[0]}-${this.state.end[1]}`\n    );\n  }\n\n  animate() {\n\n    this.clearGraph();\n    let { grid, start, end } = this.state;\n\n    if (this.props.algoType === \"dijkstra\") {\n        let res = this.props.dijkstraSearch(\n          start,\n          end,\n          grid.length,\n          grid[0].length\n        );\n        \n        if (res === null) {\n          alert('No path found');\n        } else {\n          let { time, shortestPath } = res;\n          setTimeout(() => {\n            for (let i = 0; i < shortestPath.length; i++) {\n              document.getElementById(shortestPath[i]).classList.add('path');\n            }\n          }, time)\n        }\n    } else if (this.props.algoType === \"aStar\") {\n      let path = this.props.aStarSearch(\n        start,\n        end,\n        grid.length,\n        grid[0].length)\n\n        if (path.length === 0) alert('No path found');\n        else {\n          let time = path.pop();\n          setTimeout(() => {\n            for (let i = 0; i < path.length; i++) {\n              document.getElementById(this.parsePosToId(path[i])).classList.add('path');\n            }\n          }, time + 1000);\n        }\n    }\n  }\n\n  clearGraph() {\n    for (let i = 0; i < this.state.grid.length; i++) {\n      for (let j = 0; j < this.state.grid[0].length; j++) {\n        document.getElementById(`${i}-${j}`).classList.remove(\"visit\");\n        document.getElementById(`${i}-${j}`).classList.remove(\"path\");\n      }\n    }\n  }\n\n  handleReset(e) {\n    e.preventDefault();\n    for (let i = 0; i < this.state.grid.length; i++) {\n      for (let j = 0; j < this.state.grid[0].length; j++) {\n        document.getElementById(`${i}-${j}`).classList.remove(\"visit\");\n        document.getElementById(`${i}-${j}`).classList.remove(\"wall\");\n        document.getElementById(`${i}-${j}`).classList.remove(\"path\");\n        document.getElementById(`${i}-${j}`).classList.remove(\"start\");\n        document.getElementById(`${i}-${j}`).classList.remove(\"finish\");\n      }\n    }\n\n      this.setState({\n          start: [10, 8],\n          end: [10, 42]\n      }, () => {\n          this.getStartElement().classList.add(\"start\");\n          this.getEndElement().classList.add(\"finish\");\n      })\n  }\n\n  handleOutbounds(e) {\n    e.preventDefault();\n    if (!this.state.isMousePressed) return;\n\n    if (this.startSelected) {\n      document.getElementById(this.parsePosToId(this.lastPos)).classList.add('start');\n      this.startSelected = false;\n      this.setState({ isMousePressed: false, start: this.lastPos });\n    } else if (this.endSelected) {\n      document.getElementById(this.parsePosToId(this.lastPos)).classList.add('finish');\n      this.endSelected = false;\n      this.setState({ isMousePressed: false, end: this.lastPos });\n    }\n  }\n\n  handleTips() {\n    let tipsModal = document.querySelector('.tips');\n    let closeBtn = document.getElementById('close-btn');\n    tipsModal.style.display = 'block';\n\n    closeBtn.onclick = () => {\n      tipsModal.style.display = 'none';\n    }\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"grid-content\">\n        <div className=\"controlls\">\n          <button className=\"start-btn hover\" onClick={() => this.animate()}>\n            Start\n          </button>\n          <button className=\"reset-btn hover\" onClick={this.handleReset}>\n            Reset\n          </button>\n          <button className=\"tips-btn hover\" onClick={this.handleTips}>\n            Tips\n          </button>\n        </div>\n        <div className=\"tips\" id=\"tips\">\n          <button className=\"close-btn hover\" id=\"close-btn\">\n            X\n          </button>\n          <div className=\"pointers\">\n            <p>Drag star to change the starting vertex. </p>\n            <p>Drag flag to change the ending vertex. </p>\n            <p>Press down on empty spaces to creat walls.</p>\n          </div>\n          <div className=\"tips-content\"></div>\n        </div>\n        <div className=\"gcp\">\n          <div className=\"grid-container\" onMouseLeave={this.handleOutbounds}>\n            {this.state.grid}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Grid;","export function PriorityQueue() {\n    this.items = [];\n    this.size = 0;\n}\n\nPriorityQueue.prototype.getLeftChildIndex = function(parentIndex) {\n    return 2 * parentIndex + 1;\n}\n\nPriorityQueue.prototype.getRightChildIndex = function(parentIndex) {\n  return 2 * parentIndex + 2;\n};\n\nPriorityQueue.prototype.getParentIndex = function(childIndex) {\n  return (childIndex - 1) >> 1;\n};\n\nPriorityQueue.prototype.hasLeftChild = function(index) {\n    return this.getLeftChildIndex(index) < this.size;\n}\n\nPriorityQueue.prototype.hasRightChild = function(index) {\n    return this.getRightChildIndex(index) < this.size;\n}\n\nPriorityQueue.prototype.hasParent = function(index) {\n    return this.getParentIndex(index) >= 0;\n}\n\nPriorityQueue.prototype.leftChild = function(index) {\n    return this.items[this.getLeftChildIndex(index)];\n}\n\nPriorityQueue.prototype.rightChild = function (index) {\n  return this.items[this.getRightChildIndex(index)];\n};\n\nPriorityQueue.prototype.parent = function(index) {\n    return this.items[this.getParentIndex(index)];\n}\n\nPriorityQueue.prototype.swap = function(idx1, idx2) {\n    [this.items[idx1], this.items[idx2]] = [this.items[idx2], this.items[idx1]];\n}\n\nPriorityQueue.prototype.remove = function() {\n    if (this.size === 0) return null;\n    let node = this.items[0];\n    this.items[0] = this.items[this.size - 1];\n    this.heapifyDown();\n    this.size--;\n    return node;\n}\n\nPriorityQueue.prototype.add = function(node) {\n    this.items[this.size] = node;\n    this.size++;\n    this.heapifyUp();\n}\n\nPriorityQueue.prototype.size = function() {\n    return this.size;\n}\n\nPriorityQueue.prototype.heapifyUp = function () {\n    let index = this.size - 1;\n    while (this.hasParent(index) && this.parent(index).d > this.items[index].d) {\n        this.swap(index, this.getParentIndex(index));\n        index = this.getParentIndex(index);\n    }\n}\n\nPriorityQueue.prototype.heapifyDown = function() {\n    let index = 0;\n    while (this.hasLeftChild(index)) {\n        let smallerChildIndex = this.getLeftChildIndex(index);\n        if (this.hasRightChild(index) && this.rightChild(index).d < this.leftChild(index).d) {\n            smallerChildIndex = this.getRightChildIndex(index);\n        }\n\n        if (this.items[index] < this.items[smallerChildIndex]) break;\n        this.swap(index, smallerChildIndex);\n        index = smallerChildIndex;\n    }\n}\n\nexport function Node(k, d) {\n    this.k = k;\n    this.d = d;\n}\n\nexport const buildAdjList = (rows, cols) => {\n    let graph = {};\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < cols; j++) {\n            let cellId = `${i}-${j}`;\n            let cell = document.getElementById(cellId);\n            \n            if (cell.classList.contains('wall')) continue;\n\n            graph[cellId] = {};\n            addToGraph(graph[cellId], getAdjNodes([i, j], rows, cols))\n        }\n    }\n    return graph;\n  }\n\n  export const getSP = (path, src, tar) => {\n      let prev = tar;\n      let shortestPath = [];\n\n      while (prev !== src) {\n        shortestPath.unshift(prev);\n        prev = path[prev].k;\n      }\n      shortestPath.unshift(src);\n\n      return shortestPath;\n  }\n\nexport const getAdjNodes = (pos, H, W) => {\n\n    const dirs = [\n        [-1, 0],\n        [0, 1],\n        // [-1, 1],\n        // [1, 1],\n        // [1, -1],\n        [1, 0],\n        // [-1, -1],\n        [0, -1],\n    ]\n\n    let [x, y] = pos;\n    let nodes = [];\n\n    for (let dir of dirs) {\n        let [dx, dy] = dir;\n        let newX = dx + x;\n        let newY = dy + y;\n\n        if (newX >= 0 && newX < H && newY >= 0 && newY < W) {\n            if (!document.getElementById(`${newX}-${newY}`).classList.contains('wall'))\n                nodes.push([newX, newY]);\n        }\n    }\n    return nodes;\n}\n\nconst addToGraph = (node, neighbors) => {\n    for (let neighbor of neighbors) {\n        let [x, y] = neighbor;\n        let key = x + '-' + y;\n        node[key] = 1;\n    }\n}\n","import React from 'react';\nimport Grid from '../grid/grid';\nimport './graph.css'\nimport { buildAdjList, getSP, PriorityQueue, Node } from \"./util\";\n\nclass Dijkstra extends React.Component {\n\n    componentDidMount() {\n        document.getElementById('dijkstra').classList.add('active');\n        document.getElementById(\"astar\").classList.remove(\"active\");\n    }\n\n  dijkstraSearch(start, end, rows, cols) {\n    let graph = buildAdjList(rows, cols);\n    let visited = new Set();\n    let src = `${start[0]}-${start[1]}`;\n    let tar = `${end[0]}-${end[1]}`;\n    let distance = {};\n    let path = {};\n    let pq = new PriorityQueue();\n    let offset = 1;\n    let time = 0;\n\n    for (let node in graph) {\n        distance[node] = Infinity;\n    }\n\n    distance[src] = 0;\n    pq.add(new Node(src, 0));\n \n    while (!visited.has(tar)) {\n        if (pq.size === 0) {\n          return null;\n        }\n        let curNode = pq.remove();\n        if (visited.has(curNode.k)) {\n            continue;\n        }\n        visited.add(curNode.k);\n\n        setTimeout(() => {\n            document.getElementById(`${curNode.k}`).classList.add(\"visit\");\n        }, 10 * offset);\n        offset++;\n\n        let neighbors = graph[curNode.k];\n        for (let neighbor in neighbors) {\n\n            let newDistance = neighbors[neighbor] + distance[curNode.k];\n\n            if (newDistance < distance[neighbor]) {\n                distance[neighbor] = newDistance;\n                path[neighbor] = curNode;\n            }\n            if (!visited.has(neighbor)) {\n              pq.add(new Node(neighbor, distance[neighbor]));\n            }\n        }\n    }\n        time = offset * 10 + 1500;\n        let shortestPath = getSP(path, src, tar); \n        return { time, shortestPath };\n  }\n\n  render() {\n    return (\n      <div className=\"graph-box\">\n        <Grid algoType=\"dijkstra\" dijkstraSearch={this.dijkstraSearch}/>\n      </div>\n    );\n  }\n}\n\nexport default Dijkstra;","export function Node(pos, g, h) {\n    this.x = pos[0];\n    this.y = pos[1];\n    this.g = g; //G cost = distance from starting node\n    this.h = h; //H cost (heuristic) = distance from end node\n    this.d = this.g + this.h; //F cost = G + H\n    this.parent = null;\n}\n\nNode.prototype.setParent = function(parentNode) {\n    this.parent = parentNode;\n}\n\nNode.prototype.UpdateGCost = function(cost) {\n    this.g = cost;\n    this.d = this.g + this.h;\n}\n\nNode.prototype.getGCost = function() {\n    return this.g;\n}\n\nNode.prototype.getHCost = function() {\n    return this.h;\n}\n\nNode.prototype.getFCost = function() {\n    return this.d;\n}\n\nNode.prototype.getPos = function() {\n    return [this.x, this.y];\n}\n\nexport function calcGCost(startPos, curPos) {\n    return Math.abs(startPos[0] - curPos[0]) * 10 + Math.abs(startPos[1] - curPos[1]) * 10;\n}\n\nexport function calcHCost(curPos, endPos) {\n    return Math.abs(endPos[0] - curPos[0]) * 10 + Math.abs(endPos[1] - curPos[1]) * 10;\n}\n\nexport function found(pos, end) {\n    return pos[0] === end[0] && pos[1] === end[1];\n}","import React from 'react';\nimport Grid from \"../grid/grid\";\nimport \"./graph.css\";\nimport { Node, calcGCost, calcHCost, found } from './aStar_util';\nimport { PriorityQueue, getAdjNodes } from './util';\n\nclass AStar extends React.Component {\n\n  componentDidMount() {\n    document.getElementById(\"dijkstra\").classList.remove(\"active\");\n    document.getElementById(\"astar\").classList.add(\"active\");\n  }\n\n  aStarSearch(start, end, row, col) {\n    let pq = new PriorityQueue();\n    let open = {};\n    let close = new Set();\n    let curPos = start;\n    let g = 0;\n    let h = calcHCost(start, end);\n    let offset = 1;\n    let path = [];\n    let startNode = new Node(start, g, h);\n    let startKey = `${start[0]-start[1]}`;\n    pq.add(startNode);\n    open[startKey] = startNode;\n\n    while (pq.size !== 0) {\n      let curNode = pq.remove();\n      curPos = curNode.getPos();\n      let key = `${curPos[0]}-${curPos[1]}`;\n      close.add(key);\n\n      setTimeout(() => {\n        document.getElementById(`${key}`).classList.add(\"visit\");\n      }, offset);\n      offset++;\n\n      if (found(curPos, end)) {\n        let prev = curNode;\n        while (prev.parent !== null) {\n          path.unshift(prev.getPos());\n          prev = prev.parent;\n        }\n        path.unshift(start);\n        path.push(offset);\n        return path;\n      }\n  \n      let neighbors = getAdjNodes(curPos, row, col);\n      for (let neighbor of neighbors) {\n        let k = `${neighbor[0]}-${neighbor[1]}`;\n        if (close.has(k)) continue;\n\n        g = calcGCost(start, neighbor);\n        h = calcHCost(neighbor, end);\n        let node = new Node(neighbor, g, h);\n        if (open[k] === undefined) pq.add(node);\n        open[k] = node;\n        node.setParent(curNode);\n        \n        open[key] = node;\n        \n      }\n    }\n    return [];\n  }\n\n    render() {\n        return (\n          <div className=\"graph-box\">\n            <Grid algoType=\"aStar\" aStarSearch={this.aStarSearch}/>\n          </div>\n        );\n    }\n}\n\nexport default AStar;","import React from 'react';\nimport './home.css'\n\nclass Home extends React.Component {\n\n    componentDidMount() {\n        const menuList = document.querySelectorAll(\".menu-list li a\");\n        for (let i = 0; i < menuList.length; i++) {\n            menuList[i].classList.remove('active');\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"home-box\">\n                <div className=\"modal-overlay\" id=\"modal-overlay\"></div>\n\n                <div className=\"modal\" id=\"modal\">\n                    <div className=\"modal-guts\">\n                        <h1>About</h1>\n                        <p>Hello, thank you for checking out algorithm visualizer, a tool for visualizing different algorithms. \n                            I created this tool because I think this is\n                            a great way to solidify my understanding of how different algorithms work.</p>\n                        <p>To get started, click on any of the algorithms from the top menu, and click the start button\n                            to see it in action. \n                        </p>\n                        <p>\n                            Currently supports:\n                            <li>\n                                Dijkstra's - an algorithm for finding the shortest path. \n                            </li>\n                            {/* <br/>\n                            Work in progress: */}\n                            <li>\n                                A* Algorithm - a more optimal path finding algorithm. Faster than Dijkstra's.\n                            </li>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Header from './header/Header';\nimport { Route } from 'react-router-dom';\nimport Dijkstra from \"./graph/Dijkstra\";\nimport AStar from './graph/AStar';\nimport Home from './home/Home';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Route exact path=\"/\" component={Home}></Route>\n      <Route exact path=\"/astar\" component={AStar}></Route>\n      <Route exact path=\"/dijkstra\" component={Dijkstra}></Route>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}